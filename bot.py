import logging

from aiogram import Dispatcher, Bot, executor
from aiogram.types import *
from btn import start_btn, notification_btn, settings_btn, city_btn, language_btn, invite_btn, unit_btn

logging.basicConfig(level=logging.INFO)

BOT_TOKEN = "5935940670:AAFazHO96cj2dNOd5a1c0uK_mlBnH84IGhQ"

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot=bot)


@dp.message_handler(commands=['start'])
async def start_command(message: Message):
    btn = await start_btn()
    await message.answer(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.mention}", reply_markup=btn)


@dp.message_handler()
async def text_handler(message: Message):
    text = message.text
    if text == "üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è":
        btn = await notification_btn()
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:", reply_markup=btn)

    elif text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏":
        btn = await settings_btn()
        await message.answer("–ù–∞—Å—Ç—Ä–æ–π–∫–∏", reply_markup=btn)

    elif text == "‚Ü©Ô∏è –ù–∞–∑–∞–¥":
        btn = await start_btn()
        await message.answer("–í–æ—Ç —Å–ø–∏—Å–æ–∫ —Ç–æ–≥–æ, —á—Ç–æ —è —É–º–µ—é:", reply_markup=btn)

    elif text == "üåé –ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥":
        btn = await city_btn()
        await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é, —á—Ç–æ–±—ã —è –ø–æ–∫–∞–∑–∞–ª —Ç–µ–±–µ –ø–æ–≥–æ–¥—É:", reply_markup=btn)
        
    elif text == "üìè –ï–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è":
        btn = await unit_btn()
        await message.answer("–ï–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è:", reply_markup=btn)

    elif text == "üá∑üá∫/üá¨üáß –Ø–∑—ã–∫":
        btn = await language_btn()
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose language", reply_markup=btn)

    elif text == "üë• –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª/–≥—Ä—É–ø–ø—É":
        btn = await invite_btn()
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=btn)




if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
